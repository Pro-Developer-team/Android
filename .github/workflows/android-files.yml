name: Download files from Android

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write
  packages: write
  deployments: write
  pull-requests: write

jobs:
  Import-files:
    name: Import files from Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Create or modify files
        run: |
          echo "Creating or modifying files..."
          mkdir -p MyAndroidApp/app/src/main/java/com/example/myandroidapp

          # Check if MainActivity.java exists; if not, create it
          if [ ! -f MyAndroidApp/app/src/main/java/com/example/myandroidapp/MainActivity.java ]; then
            echo "public class MainActivity {}" > MyAndroidApp/app/src/main/java/com/example/myandroidapp/MainActivity.java
            echo "MainActivity.java created."
          else
            echo "MainActivity.java already exists, skipping creation."
          fi

          # Create required directories
          for dir in MyAndroidApp/app/src/main/java/com/example/myandroidapp \
                     MyAndroidApp/app/src/main/res/layout \
                     MyAndroidApp/app/src/main/res/values \
                     MyAndroidApp/app/src/main/java/com/example/myandroidapp/ui \
                     MyAndroidApp/app/src/main/java/com/example/myandroidapp/data \
                     MyAndroidApp/app/src/main/java/com/example/myandroidapp/model \
                     MyAndroidApp/app/src/main/java/com/example/myandroidapp/utils \
                     MyAndroidApp/app/src/main/res/drawable \
                     MyAndroidApp/app/src/main/res/menu; do
            mkdir -p "$dir"
            echo "$dir created or already exists."
          done

          # Create files if they don't exist
          for file in MyAndroidApp/app/src/main/AndroidManifest.xml \
                      MyAndroidApp/app/src/main/java/com/example/myandroidapp/MainActivity.java \
                      MyAndroidApp/app/src/main/java/com/example/myandroidapp/ui/HomeFragment.java \
                      MyAndroidApp/app/src/main/java/com/example/myandroidapp/ui/SettingsFragment.java \
                      MyAndroidApp/app/src/main/java/com/example/myandroidapp/data/DataRepository.java \
                      MyAndroidApp/app/src/main/java/com/example/myandroidapp/model/User.java \
                      MyAndroidApp/app/src/main/java/com/example/myandroidapp/utils/Constants.java \
                      MyAndroidApp/app/src/main/res/layout/activity_main.xml \
                      MyAndroidApp/app/src/main/res/layout/fragment_home.xml \
                      MyAndroidApp/app/src/main/res/layout/fragment_settings.xml \
                      MyAndroidApp/app/src/main/res/values/strings.xml \
                      MyAndroidApp/app/src/main/res/values/colors.xml \
                      MyAndroidApp/app/src/main/res/values/styles.xml \
                      MyAndroidApp/app/src/main/res/menu/menu_main.xml; do
            if [ ! -f "$file" ]; then
              touch "$file"
              echo "$file created."
            else
              echo "$file already exists, skipping creation."
            fi
          done

          # Create le.java file
          echo "public class le {}" > MyAndroidApp/app/src/main/java/com/example/myandroidapp/le.java
          echo "le.java created."

          # Download additional files from the specified GitHub repository
          echo "Downloading additional files from https://github.com/android/nowinandroid/tree/main/core"
          mkdir -p MyAndroidApp/app/src/main/java/com/example/myandroidapp/core

          # List of files to download
          files=(
            "core/ExampleFile.java"
            "core/AnotherFile.java"
            "core/YetAnotherFile.java"
            # Add individual files here instead of directories
          )

          # Download each file
          for file in "${files[@]}"; do
            curl -L -o MyAndroidApp/app/src/main/java/com/example/myandroidapp/$file https://raw.githubusercontent.com/android/nowinandroid/main/$file || echo "Failed to download $file"
            echo "$file downloaded."
          done

          echo "Adding files"
          git add MyAndroidApp/

          echo "Configuring Git user"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

          echo "Committing changes"
          git commit -m "Files committed." || echo "No changes to commit"

          echo "Pushing changes"
          git remote set-url origin https://github-actions:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git push origin main

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Create Pull Request
        run: |
          PR_TITLE="Automated PR: Update Android project structure"
          gh pr create --title "$PR_TITLE" --body "This PR was created automatically by GitHub Actions." --base main --head main || echo "No pull request created. Please check to make sure you have given access to pull requests by typing `pull-requests: write` under `permissions`."
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Enable Auto-Merge
        run: |
          gh pr merge --auto --delete-branch --squash "$PR_TITLE" || echo "No pull request to merge. Ensure that you have a PR open and ready."
        env:
          GH_TOKEN: ${{ github.token }}
